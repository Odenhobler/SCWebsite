{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samuel Mager\\\\Documents\\\\GitHub\\\\SCWebsite\\\\app\\\\frontend\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport './App.css'; //Not sure, but I suppose this is just the button\n\nclass App extends Component {\n  constructor() {\n    super();\n    /*this.state = {\n      url: '',\n    }*/\n    //ok I THINK this might just set the variable to zero which can then be altered and passed via POST\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    axios.post(\"/sc_league/\", \"Das ist das POST-Objekt\").then(res => {\n      alert(res.data);\n    });\n    event.preventDefault();\n  }\n\n  // I think the actual html fully belongs here, not sure why they put everything \n  //in the header without body though, especially why within a div \n  //--> BECAUSE THIS IS THE ROOT-DIV WHICH IS IN THE BODY OF THE SERVED INDEX.HTML. \n  //Maybe see this: https://reactjs.org/docs/fragments.html\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"show database dummy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }))))\n    /*<div>\n      <body>\n        <p>blabla</p>\n      </body>\n    </div>*/\n    ;\n  }\n\n}\n\nexport default App;\n/*\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload. Hallodocboker.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n\n//Backup from Version before applying tutorial, added everything after the imports\n\n*/","map":{"version":3,"sources":["C:/Users/Samuel Mager/Documents/GitHub/SCWebsite/app/frontend/src/App.js"],"names":["React","Component","axios","App","constructor","handleSubmit","bind","event","post","then","res","alert","data","preventDefault","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP,C,CAEA;;AACA,MAAMC,GAAN,SAAkBF,SAAlB,CAA2B;AACzBG,EAAAA,WAAW,GAAG;AACZ;AACA;;;AAEkB;;AACtB,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACC;;AAEDD,EAAAA,YAAY,CAACE,KAAD,EAAQ;AAClBL,IAAAA,KAAK,CACFM,IADH,CACQ,aADR,EACuB,yBADvB,EAEGC,IAFH,CAEQC,GAAG,IAAI;AACXC,MAAAA,KAAK,CAACD,GAAG,CAACE,IAAL,CAAL;AACD,KAJH;AAKAL,IAAAA,KAAK,CAACM,cAAN;AACD;;AAED;AACA;AACA;AACA;AACAC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,QAAQ,EAAE,KAAKT,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,qBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADF,CADF;AAOA;;;;;AARF;AAcD;;AArC0B;;AAuC3B,eAAeF,GAAf;AAEA","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport './App.css';\n\n//Not sure, but I suppose this is just the button\nclass App extends Component{\n  constructor() {\n    super();\n    /*this.state = {\n      url: '',\n    }*/               //ok I THINK this might just set the variable to zero which can then be altered and passed via POST\nthis.handleSubmit = this.handleSubmit.bind(this);\n}\n\nhandleSubmit(event) {\n  axios\n    .post(\"/sc_league/\", \"Das ist das POST-Objekt\")\n    .then(res => {\n      alert(res.data)\n    })\n  event.preventDefault();\n};\n\n// I think the actual html fully belongs here, not sure why they put everything \n//in the header without body though, especially why within a div \n//--> BECAUSE THIS IS THE ROOT-DIV WHICH IS IN THE BODY OF THE SERVED INDEX.HTML. \n//Maybe see this: https://reactjs.org/docs/fragments.html\nrender() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <form onSubmit={this.handleSubmit}>\n            <input type=\"submit\" value=\"show database dummy\" />\n        </form>\n      </header>\n    </div>\n    /*<div>\n      <body>\n        <p>blabla</p>\n      </body>\n    </div>*/\n  );\n}\n}\nexport default App;\n\n/*\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload. Hallodocboker.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n\n//Backup from Version before applying tutorial, added everything after the imports\n\n*/\n"]},"metadata":{},"sourceType":"module"}